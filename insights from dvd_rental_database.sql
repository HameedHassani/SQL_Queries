
-- Total number of unique customers, total number of rentals, and total revenue generated by 
-- 	the rental of PG-13 rated movies between January 1, 2005 and March 31, 2005, inclusive

SELECT COUNT(DISTINCT customer.customer_id) AS total_customers, 
       COUNT(DISTINCT rental.inventory_id) AS total_rentals,
       SUM(payment.amount) AS total_revenue
FROM rental
	JOIN inventory ON rental.inventory_id = inventory.inventory_id
	JOIN film ON inventory.film_id = film.film_id
	JOIN payment ON rental.rental_id = payment.rental_id
	JOIN customer ON rental.customer_id = customer.customer_id
WHERE film.rating = 'PG-13'
  AND rental.return_date BETWEEN '2005-01-01' AND '2005-03-31';
  
-- categories with the highest total revenue


  SELECT 
    f.title,
    COUNT(DISTINCT r.customer_id) AS unique_customers,
    COUNT(r.rental_id) AS total_rentals,
    SUM(p.amount) AS total_revenue
FROM 
    film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY 
    f.film_id, 
    f.title
ORDER BY 
    total_revenue DESC
LIMIT 10;

  
  
-- Customers who have rented films from the "Action" category

SELECT c.first_name, c.last_name, c.email, f.title
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c2 ON fc.category_id = c2.category_id
WHERE c2.name = 'Action'
ORDER BY c.last_name, c.first_name, f.title;


--Top 10 customers who have rented the most unique films.

SELECT c.first_name, c.last_name, c.email, COUNT(DISTINCT f.film_id) AS unique_film_rented
FROM customer c
JOIN rental r ON r.customer_id = c.customer_id
JOIN inventory i ON i.inventory_id = r.inventory_id
JOIN film f ON f.film_id = i.film_id
GROUP BY c.customer_id
ORDER BY unique_film_rented DESC
LIMIT 10;


-- Top 5 films with the highest average rental duration in days excluding films with less than 10 rentals.

SELECT first_name, last_name, SUM(amount) AS total_rental_fee
FROM customer c
JOIN payment p ON p.customer_id = c.customer_id
WHERE datepart(quarter, payment_date) = 4
GROUP BY c.customer_id 
ORDER BY SUM(amount) DESC
LIMIT 10;


-- Total revenue generated from rentals in the year 2006 by month the total revenue

SELECT to_char(payment_date, 'month') AS month_names, round(sum(amount), 2) AS total_revenue
FROM payment
WHERE year(payment_date) = 2006
GROUP BY month(payment_date)
ORDER BY month(payment_date)

-- Top 5 staff members with the highest total rental duration in hours. 

SELECT s.first_name, s.last_name, s.email, SUM(TIMEDIFF(r.return_date, r.rental_date)) AS rental_duration
FROM staff s
JOIN rental r ON r.staff_id = s.staff_id
JOIN inventory i ON i.inventory_id = r.inventory_id
GROUP BY s.staff_id
ORDER BY rental_duration DESC
LIMIT 5;

-- Top 5 customers with the highest average rental duration in days.

SELECT c.first_name, c.last_name, c.email, ROUND(AVG(DATEDIFF(return_date, rental_date)), 2) as avg_rental_duration
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
WHERE return_date IS NOT NULL
GROUP BY c.customer_id
ORDER BY avg_rental_duration DESC
LIMIT 5;

-- Top 10 actors who have appeared in the most number of films.

SELECT first_name, last_name, count(*) as total_film
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
JOIN film f ON fa.film_id = f.film_id
GROUP BY a.actor_id
ORDER BY total_film DESC
LIMIT 10;

-- Top 5 customers who have spent the most on rentals in the month of January 2006.

SELECT c.first_name, c.last_name, c.email, SUM(p.amount) AS total_amount_spent
FROM customer c
JOIN payment p ON c.customer_id = p.customer_id
JOIN rental r ON r.customer_id = c.customer_id
WHERE YEAR(p.payment_date) = 2006 AND MONTH(p.payment_date) = 1
GROUP BY c.customer_id
ORDER BY total_amount_spent DESC
LIMIT 5;









